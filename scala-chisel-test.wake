global def makeScalaTestModule name root version =
  makeScalaModule name root version
  | editScalaModuleDeps (chiselIotestersScalaModule, chiselIotesters2ScalaModule, _)
  | setScalaModuleSourceDirs ("src/test/scala", Nil)
  | setScalaModuleResourceDirs ("src/test/resources", Nil)

def reportScalaTest report job =
  def printReport paths =
    def reports = paths | filter (_.getPathName ==~ report)
    match reports
      report, Nil =
        def res = read report
        def _ = rmap println res
        Pass "Success!"
      # Nil suggests that ScalaTest didn't run
      Nil = match paths
        bad, Nil if bad.getPathError.isSome =
          match bad.getPathError
            Some err = Fail err
            None     = job.getJobStderr
        x = Fail "Something has gone horribly wrong".makeError
      x           = Fail "Ran Scala Test expected exactly 1 report, got {format x}".makeError

  match job.getJobOutputs
    Nil = job.getJobStderr
    output, Nil if output.getPathError.isSome =
      printReport job.getJobFailedOutputs
      | rmapPass (\_ Fail "ScalaTest {report} failed!".makeError)
    one, Nil = panic "bad"
    outputs = printReport outputs

global def runScalaTestWithOpt module tester report options=
  def cmd = runJava module.scalaModuleClasspath "org.scalatest.tools.Runner" (("-fF", report, "-s", tester, Nil) ++ options) Nil
  cmd | reportScalaTest report

global def runScalaTestSuite module tester report =
  runScalaTestWithOpt module tester report Nil

global def runScalaTest module tester test report =
  runScalaTestWithOpt module tester report ("-z", test, Nil)
